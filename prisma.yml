endpoint: ${env:PRISMA_ENDPOINT}
datamodel: src/database/datamodel.graphql

generate:
  - generator: javascript-client
    output: ./prisma-client/

# The secret is used to generate JTWs which allow to authenticate
# against your Prisma service. You can use the `prisma token` command from the CLI
# to generate a JWT based on the secret. When using the `prisma-binding` package,
# you don't need to generate the JWTs manually as the library is doing that for you
# (this is why you're passing it to the `Prisma` constructor).
# Here, the secret is loaded as an environment variable from .env.
# secret: ${env:PRISMA_SECRET}

seed:
  import: src/database/seed.graphql

# post-deploy is run after `prisma deploy` is executed
hooks:
  post-deploy:
    - graphql get-schema -p database
    - graphql codegen
